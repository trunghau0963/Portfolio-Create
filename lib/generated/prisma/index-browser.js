
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  name: 'name',
  password: 'password',
  isAdmin: 'isAdmin',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SectionScalarFieldEnum = {
  id: 'id',
  slug: 'slug',
  title: 'title',
  type: 'type',
  visible: 'visible',
  order: 'order',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CategoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  order: 'order',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  projectIds: 'projectIds'
};

exports.Prisma.SettingScalarFieldEnum = {
  id: 'id',
  siteTitle: 'siteTitle',
  theme: 'theme',
  showPortrait: 'showPortrait',
  resumeUrl: 'resumeUrl',
  globalFontFamily: 'globalFontFamily',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TextBlockScalarFieldEnum = {
  id: 'id',
  content: 'content',
  order: 'order',
  sectionId: 'sectionId',
  fontSize: 'fontSize',
  fontFamily: 'fontFamily',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ImageBlockScalarFieldEnum = {
  id: 'id',
  src: 'src',
  alt: 'alt',
  caption: 'caption',
  imagePublicId: 'imagePublicId',
  width: 'width',
  height: 'height',
  order: 'order',
  sectionId: 'sectionId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.HeroSectionContentScalarFieldEnum = {
  id: 'id',
  portraitImageSrc: 'portraitImageSrc',
  portraitImagePublicId: 'portraitImagePublicId',
  portraitAlt: 'portraitAlt',
  sectionId: 'sectionId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EducationItemScalarFieldEnum = {
  id: 'id',
  institution: 'institution',
  degree: 'degree',
  period: 'period',
  description: 'description',
  order: 'order',
  sectionId: 'sectionId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EducationImageScalarFieldEnum = {
  id: 'id',
  src: 'src',
  imagePublicId: 'imagePublicId',
  alt: 'alt',
  caption: 'caption',
  order: 'order',
  educationItemId: 'educationItemId',
  createdAt: 'createdAt'
};

exports.Prisma.SkillItemScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  level: 'level',
  order: 'order',
  sectionId: 'sectionId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SkillImageScalarFieldEnum = {
  id: 'id',
  src: 'src',
  imagePublicId: 'imagePublicId',
  alt: 'alt',
  caption: 'caption',
  order: 'order',
  sectionId: 'sectionId',
  createdAt: 'createdAt'
};

exports.Prisma.ExperienceItemScalarFieldEnum = {
  id: 'id',
  positionTitle: 'positionTitle',
  companyName: 'companyName',
  period: 'period',
  summary: 'summary',
  description: 'description',
  imageSrc: 'imageSrc',
  imagePublicId: 'imagePublicId',
  order: 'order',
  sectionId: 'sectionId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ExperienceDetailImageScalarFieldEnum = {
  id: 'id',
  src: 'src',
  imagePublicId: 'imagePublicId',
  alt: 'alt',
  caption: 'caption',
  order: 'order',
  experienceItemId: 'experienceItemId',
  createdAt: 'createdAt'
};

exports.Prisma.ProjectItemScalarFieldEnum = {
  id: 'id',
  projectNumber: 'projectNumber',
  title: 'title',
  companyName: 'companyName',
  description1: 'description1',
  description2: 'description2',
  imageSrc: 'imageSrc',
  imagePublicId: 'imagePublicId',
  liveLink: 'liveLink',
  sourceLink: 'sourceLink',
  layout: 'layout',
  order: 'order',
  sectionId: 'sectionId',
  categoryIds: 'categoryIds',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TestimonialItemScalarFieldEnum = {
  id: 'id',
  clientName: 'clientName',
  role: 'role',
  company: 'company',
  content: 'content',
  rating: 'rating',
  imageSrc: 'imageSrc',
  imagePublicId: 'imagePublicId',
  order: 'order',
  sectionId: 'sectionId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ContactInfoItemScalarFieldEnum = {
  id: 'id',
  type: 'type',
  value: 'value',
  label: 'label',
  icon: 'icon',
  order: 'order',
  sectionId: 'sectionId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CustomSectionContentBlockScalarFieldEnum = {
  id: 'id',
  type: 'type',
  content: 'content',
  imageSrc: 'imageSrc',
  imageAlt: 'imageAlt',
  linkUrl: 'linkUrl',
  imagePublicId: 'imagePublicId',
  fontSize: 'fontSize',
  fontWeight: 'fontWeight',
  fontStyle: 'fontStyle',
  textAlign: 'textAlign',
  order: 'order',
  sectionId: 'sectionId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};


exports.Prisma.ModelName = {
  User: 'User',
  Section: 'Section',
  Category: 'Category',
  Setting: 'Setting',
  TextBlock: 'TextBlock',
  ImageBlock: 'ImageBlock',
  HeroSectionContent: 'HeroSectionContent',
  EducationItem: 'EducationItem',
  EducationImage: 'EducationImage',
  SkillItem: 'SkillItem',
  SkillImage: 'SkillImage',
  ExperienceItem: 'ExperienceItem',
  ExperienceDetailImage: 'ExperienceDetailImage',
  ProjectItem: 'ProjectItem',
  TestimonialItem: 'TestimonialItem',
  ContactInfoItem: 'ContactInfoItem',
  CustomSectionContentBlock: 'CustomSectionContentBlock'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
